{
    "TR": {
        "c":"        <div class="F__formarea">
                <form>
                    <div class="F__form-wrap">
                        <div class="F__layout-block">
                            <div class="F__input-block">
                                <div class="F__field-attr">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z" />
                                        </svg>
                                    </div>
                                    <label for="first_name">First Name</label>
                                </div>   
                                <input id="first_name" type="text" name="fname" autocomplete="given-name" minlength="2" requiredonly />
                                
                            </div>
                            <div class="F__input-block">
                                <div class="F__field-attr">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M12,13C9.33,13 4,14.33 4,17V20H20V17C20,14.33 14.67,13 12,13M12,4A4,4 0 0,0 8,8A4,4 0 0,0 12,12A4,4 0 0,0 16,8A4,4 0 0,0 12,4M12,14.9C14.97,14.9 18.1,16.36 18.1,17V18.1H5.9V17C5.9,16.36 9,14.9 12,14.9M12,5.9A2.1,2.1 0 0,1 14.1,8A2.1,2.1 0 0,1 12,10.1A2.1,2.1 0 0,1 9.9,8A2.1,2.1 0 0,1 12,5.9Z" />
                                        </svg>
                                    </div>
                                    <label for="last_name">Last Name</label>
                                </div>   
                                <input id="last_name" type="text" name="lname" autocomplete="family-name" minlength="2" requiredonly />
                    
                            </div>
                            <div class="F__input-block">
                                <div class="F__field-attr">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z" />
                                        </svg>
                                    </div>
                                    <label for="phone">Phone Number</label>
                                </div> 
                                <input id="phone" type="tel" name="phone" autocomplete="tel" minlength="5" requiredonly />
                                
                            </div>

                            <h2 class="F__subhead">number of pax</h2>

                            <div class="F__input-block">
                                <div class="F__field-attr">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M7.5,2A2,2 0 0,1 9.5,4A2,2 0 0,1 7.5,6A2,2 0 0,1 5.5,4A2,2 0 0,1 7.5,2M6,7H9A2,2 0 0,1 11,9V14.5H9.5V22H5.5V14.5H4V9A2,2 0 0,1 6,7M16.5,2A2,2 0 0,1 18.5,4A2,2 0 0,1 16.5,6A2,2 0 0,1 14.5,4A2,2 0 0,1 16.5,2M15,22V16H12L14.59,8.41C14.84,7.59 15.6,7 16.5,7C17.4,7 18.16,7.59 18.41,8.41L21,16H18V22H15Z" />
                                        </svg>
                                    </div>
                                    <label for="adult_num">Number Of Adult</label>
                                </div> 
                                <input id="adult_num" type="number" name="number_of_adult" value="1" min="0" autocomplete="off" requiredonly />
                                
                            </div>
                            <div class="F__input-block">
                                <div class="F__field-attr F__Fix_NC">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M12,2A3,3 0 0,1 15,5A3,3 0 0,1 12,8A3,3 0 0,1 9,5A3,3 0 0,1 12,2M11,22H8V16H6V9H18V16H16V22H13V18H11V22Z" />
                                        </svg>
                                    </div>
                                    <label for="child_num">Number Of Children</label>
                                </div>
                                <input id="child_num" type="number" name="number_of_children" min="0" autocomplete="off" />
                                
                            </div>
                            <div class="F__input-block">
                                <div class="F__field-attr">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M18.5,4A2.5,2.5 0 0,1 21,6.5A2.5,2.5 0 0,1 18.5,9A2.5,2.5 0 0,1 16,6.5A2.5,2.5 0 0,1 18.5,4M4.5,20A1.5,1.5 0 0,1 3,18.5A1.5,1.5 0 0,1 4.5,17H11.5A1.5,1.5 0 0,1 13,18.5A1.5,1.5 0 0,1 11.5,20H4.5M16.09,19L14.69,15H11L6.75,10.75C6.75,10.75 9,8.25 12.5,8.25C15.5,8.25 15.85,9.25 16.06,9.87L18.92,18C19.2,18.78 18.78,19.64 18,19.92C17.22,20.19 16.36,19.78 16.09,19Z" />
                                        </svg>
                                    </div>
                                    <label for="infant_num">Infants</label>
                                </div>
                                <input id="infant_num" type="number" name="number_of_infants" min="0" autocomplete="off" />  
                                
                            </div>
                            <div class="F__input-block F__compensate F__textarea">
                                <div class="F__field-attr F__Fix">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M20.71,7.04C20.37,7.38 20.04,7.71 20.03,8.04C20,8.36 20.34,8.69 20.66,9C21.14,9.5 21.61,9.95 21.59,10.44C21.57,10.93 21.06,11.44 20.55,11.94L16.42,16.08L15,14.66L19.25,10.42L18.29,9.46L16.87,10.87L13.12,7.12L16.96,3.29C17.35,2.9 18,2.9 18.37,3.29L20.71,5.63C21.1,6 21.1,6.65 20.71,7.04M3,17.25L12.56,7.68L16.31,11.43L6.75,21H3V17.25Z"/>
                                        </svg>
                                    </div>
                                    <label for="remarks">Remarks and wishes</label>
                                </div>   
                                <textarea id="remarks" name="remarks" cols="50" spellcheck="false" autocomplete="off"></textarea>

                            </div>
                        </div>

                        <div class="F__layout-block">
                            <div class="F__input-block">
                                <div class="F__field-attr">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z"/>
                                        </svg>
                                    </div>
                                    <label for="email">E-Mail address</label>
                                </div>
                                <input id="email" type="email" name="email" autocomplete="email" requiredonly />

                            </div>
                            <div class="F__input-block">
                                <div class="F__field-attr F__Fix_TD">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M17.9,17.39C17.64,16.59 16.89,16 16,16H15V13A1,1 0 0,0 14,12H8V10H10A1,1 0 0,0 11,9V7H13A2,2 0 0,0 15,5V4.59C17.93,5.77 20,8.64 20,12C20,14.08 19.2,15.97 17.9,17.39M11,19.93C7.05,19.44 4,16.08 4,12C4,11.38 4.08,10.78 4.21,10.21L9,15V16A2,2 0 0,0 11,18M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"/>
                                        </svg>
                                    </div>
                                    <label for="destination">Travelling Destination</label>
                                </div>
                                <input id="destination" type="text" name="destination" minlength="2"  autocomplete="on" requiredonly />
                        
                            </div>

                            <h2 class="F__subhead">pick dates</h2>
                            
                            <div class="F__input-block">
                                <div class="F__field-attr">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/>
                                        </svg>
                                    </div>
                                    <label for="dep_date">Depature Date</label>
                                </div>
                                <input id="dep_date" type="date" name="date" autocomplete="on" required />

                            </div>
                            <div class="F__input-block">
                                <div class="F__field-attr">
                                    <div class="F__svg-wrapper">
                                        <svg viewBox="0 0 24 24">
                                            <path d="M19,19H5V8H19M16,1V3H8V1H6V3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3H18V1M17,12H12V17H17V12Z"/>
                                        </svg>
                                    </div>
                                    <label for="arrive_date">Arrival Date</label>
                                </div>
                                <input id="arrive_date" type="date" name="date" autocomplete="on" required />

                            </div>

                            <h2 class="F__subhead">class</h2>
                            <div class="F__cb-set">
                                <div class="F__input-cb">
                                    
                                    <input id="first_cl" type="radio" name="class"/>

                                    <label for="first_cl">
                                        <div class="F__cb-attr">
                                            <svg viewBox="0 0 24 24">
                                                <path d="M17,17.5L12,15L7,17.5V5H5V19H19V5H17V17.5M12,12.42L14.25,13.77L13.65,11.22L15.64,9.5L13,9.27L12,6.86L11,9.27L8.36,9.5L10.35,11.22L9.75,13.77L12,12.42M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3Z"/>
                                            </svg>
                                            <p>First Class</p>
                                        </div>
                                        <div class="F__cb-wrapper">
                                            <div class="F__cb-custom">
                                                <div class="F__ripple"></div>
                                            </div>
                                            <div class="F__cb-container"></div> 
                                        </div>
                                        
                                    </label>
                                </div>

                                <div class="F__input-cb">
                                    
                                    <input id="business_cl" type="radio" name="class"/>

                                    <label for="business_cl">
                                        <div class="F__cb-attr">
                                            <svg viewBox="0 0 24 24">
                                                <path d="M14,6H10V4H14M20,6H16V4L14,2H10L8,4V6H4C2.89,6 2,6.89 2,8V19A2,2 0 0,0 4,21H20A2,2 0 0,0 22,19V8C22,6.89 21.1,6 20,6Z"/>
                                            </svg>
                                            <p>Business Class</p>
                                        </div>
                                        <div class="F__cb-wrapper">
                                            <div class="F__cb-custom">
                                                <div class="F__ripple"></div>
                                            </div>
                                            <div class="F__cb-container"></div> 
                                        </div>
                                        
                                    </label>
                                </div>

                                <div class="F__input-cb">
                                    
                                    <input id="econom_cl" type="radio" checked name="class"/>

                                    <label for="econom_cl">
                                        <div class="F__cb-attr">
                                            <svg viewBox="0 0 24 24">
                                                <path d="M20,14H4V8H7V10H9V8H15V10H17V8H20M20,19H4V17H20M9,4H15V6H9M20,6H17V4C17,2.89 16.11,2 15,2H9C7.89,2 7,2.89 7,4V6H4C2.89,6 2,6.89 2,8V19C2,20.11 2.89,21 4,21H20C21.11,21 22,20.11 22,19V8C22,6.89 21.11,6 20,6Z"/>
                                            </svg>
                                            <p>Economy Class</p>
                                        </div>
                                        <div class="F__cb-wrapper">
                                            <div class="F__cb-custom">
                                                <div class="F__ripple"></div>
                                            </div>
                                            <div class="F__cb-container"></div> 
                                        </div>
                                        
                                    </label>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                    <div class="F__submit">
                        <button class="F__btn ripple" type="submit" name="action">
                            <div class="F__btn-capt">Submit</div>
                            <div class="F__btn-ico">
                                <svg viewBox="0 0 24 24">
                                    <path d="M2,21L23,12L2,3V10L17,12L2,14V21Z"/>
                                </svg>
                            </div>
                        </button>
                    </div>
                </form>
            
        </div>",
        "meta":"tr"
    },
    "tr":{
        "s":".F__formarea{
    background: #fff;
    font-family: 'Source Sans Pro', Arial, Helvetica, sans-serif;
    padding-top: 30px;
    padding-left: 20px;
    padding-right: 20px;
    user-select: none;
}
.F__form-wrap{
    display: flex;
    justify-content: space-around;
}
.F__layout-block{
    width:40%;
}
.F__input-block, .F__input-cb{
    position: relative;
    padding-bottom: 30px;
}
.F__input-block input, .F__input-block textarea{
    background-color: transparent;
    border: none;
    border-bottom: 1px solid #9e9e9e;
    border-radius: 0;
    outline: none;
    height: 48px;
    width: 100%;
    font-size: 1.5em;
    margin: 0 0 20px 0;
    padding: 0;
    box-shadow: none;
    box-sizing: content-box;
    transition: 0.3s;
}
.F__input-block label{
    width: 100%;
}
.F__input-block.F__active input, .F__input-block.F__active textarea{
    border-bottom: 1px solid #26a69a;
}
.F__input-block.F__valid input, .F__input-block.F__valid textarea{
    border-bottom: 1px solid #4CAF50;
}
.F__input-block.F__invalid input, .F__input-block.F__invalid textarea{
    border-bottom: 1px solid #F44336;
}
.F__field-attr{
    position: relative;
    top: 40px;
    display: flex;
    font-size: 1.5em;
    color: #9e9e9e;
    transition: .2s ease-out;
}
 .F__input-block.F__active .F__field-attr{
    transform: translate(-11%,-100%) scale(0.8);
    color: #26a69a;
}
.F__input-block.F__dirty .F__field-attr{
    transform: translate(-11%,-100%) scale(0.8);
}
.F__input-block svg, .F__input-cb svg, .F__btn svg, .F__svg-wrapper {
    width: 30px;
    height: 30px;
}
.F__input-block path, .F__cb-attr path{
    fill: #9e9e9e;
}
.F__input-block.F__active path{
    fill: #26a69a;
}
.F__input-block.F__invalid path{
    fill: #F44336;
}
.F__input-block.F__valid path{
    fill: #4CAF50;
}
.F__input-block.F__invalid label{
    color: #F44336;
}
.F__input-block.F__valid label{
    color: #4CAF50;
}
.F__inform{
    position: absolute;
    top: 60%;
    font-size: 1em;
    opacity: 0;
    transition: .2s ease-out;
}
.F__input-block.F__valid .F__inform {
    color: #4CAF50;
    opacity: 1;
}
.F__input-block.F__invalid .F__inform {
    color: #F44336;
    opacity: 1;
}


.F__subhead{
    color: #383636;
    text-transform: uppercase;
}
.F__input-cb{
    display: flex;
}
.F__input-cb input {
    display: none;
}

.F__input-cb label {
    width: 100%;
    display: flex;
    align-items: center;
    border-bottom: 1px solid #9e9e9e;
    transition: 0.3s;
}
input[type="radio"]:checked + label{
    border-bottom: 1px solid #4CAF50;
    
}
.F__input-cb p{
    margin: 0;
    padding: 0;
}
.F__cb-attr{
    font-size: 1.5em;
    color: #9e9e9e;
    width: 100%;
    display: flex;
    flex: 1;
    position: relative;
    bottom: -9px;
    transition: 0.3s;
}
input[type="radio"]:checked + label .F__cb-attr{
    color: #4CAF50;
}
input[type="radio"]:checked + label path{
    fill: #4CAF50;
}
.F__cb-wrapper{
    position: relative;
    display: flex;
    width: 60px;
    height: 60px;
}

.F__cb-container{
    display: flex;
    width: 45px;
    height: 45px;
    border-radius: 50%;
    background-color: rgba(38, 166, 154, .0);
    margin: auto;
    z-index: 0;
    transition: .3s ease-in-out .3s;
}
input[type="radio"]:checked + label .F__cb-container{
    background-color: rgba(38, 166, 154, 0.15);
    width: 60px;
    height: 60px;
}

.F__ripple{
    background-color: #4CAF50;
    border-radius: 50%;
    position: relative;
    width: 0;
    height: 0;
    z-index: 1;
    margin: auto;
    transition: .3s ease-in-out;
}
input[type="radio"]:checked + label .F__ripple{
    width: 100%;
    height: 100%;
    border-radius: 0;
}
.F__cb-custom {
    display: flex;
    width: 30px;
    height: 30px;
    border: 3px solid #26a69a;
    border-radius: 7px;
    position: absolute;
    left: 12px;
    top: 12px;
    z-index: 2;
    transition: .3s ease-in-out;
    overflow: hidden;
}
input[type="radio"]:checked + label .F__cb-custom{
    background-color: #4CAF50;
    border-color: #4CAF50;
}
input[type="radio"]:checked + label .F__cb-custom::after{
    transform: scale(1);
}
.F__cb-custom::after{
    content: '\2713';
    display: block;
    position: absolute;
    left: 4px;
    bottom: -5px;
    font-size: 2em;
    z-index: 3;
    color: #fff;
    transform: scale(0);
    transition: .3s ease-in-out .3s;
}
.F__input-block textarea{
    resize: none;
    font-family: 'Source Sans Pro', Arial, Helvetica, sans-serif;
    min-height: 48px;
    transition: .3s;
}
.F__input-block.F__active textarea, .F__input-block.F__dirty textarea{
    min-height: 150px;
}


.F__input-block.F__active.F__textarea .F__field-attr, .F__input-block.F__dirty.F__textarea .F__field-attr{
    transform: translate(-11%,-140%) scale(0.8);
}
.F__input-block.F__compensate{
    margin-top: 30px;
}
.F__submit{
    margin-top: 10px;
    display: flex;
    justify-content: center;
    padding-bottom: 200px;
}
.F__btn{
    transition: .3s ease-out;
    color: #fff;
    background-color: #26a69a;
    letter-spacing: .5px;
    transition: .2s ease-out;
    cursor: pointer;
    outline: 0;
    border: none;
    border-radius: 2px;
    display: flex;
    justify-content: center;
    height: 36px;
    width: 200px;
    line-height: 36px;
    padding: 0 30px;
    text-transform: uppercase;
    box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2);
}
.F__btn:focus{
    background-color: #1d7d74;
    box-shadow: 0 3px 3px 0 rgba(0,0,0,0.14), 0 1px 7px 0 rgba(0,0,0,0.12), 0 3px 1px -1px rgba(0,0,0,0.2);
}
.F__btn:disabled{
    background-color: #9e9e9e;
}
.F__btn-capt{
    width: 50%;
    text-align: right;
    padding-right: 10px;
    line-height: 37px;
}
.F__btn-ico{
    display: flex;
    height: 36px;
}
.F__btn svg {
    margin: auto;
}
.F__btn path{
    fill: #fff;
}
@media all and (min-width: 1px){
    .F__form-wrap{
        flex-direction: column;
    }
    .F__layout-block{
        width: 100%;
    }
    .F__input-block{
        margin-bottom: 30px;
    }
    
    .F__input-cb label {
        height: 79px;
    }
}

@media all and (min-width: 320px){
    .F__input-cb label {
        height: auto;
    }
}


@media all and (min-width: 649px){
    .F__input-block{
        margin-bottom: 0;
    }
}
@media all and (min-width: 940px){
    .F__form-wrap{
        flex-direction: row;
    }
    .F__layout-block{
        width: 40%;
    }
    
}
.SB{
    display: block;
    height: 5px;
    overflow: hidden;
    position: fixed;
    width: 100%;
    top: 0;
    transition: .5s;
    opacity: 0;
    z-index: 1000;
}

.SB__bar-fill{
    height: 100%;
    position: absolute;
    width: 100%;
}
.SB__bar-fill::after{
    content: '';
    display: inline-block;
    height: 100%;
    position: absolute;
    width: 100%;
    left: 0;
    background-color: #5e35b1;
}
.SB__bar-primary{
    transform: scaleX(0);
    animation: bar_primary_translate 2s infinite linear;
    left: -145.166611%;
}
.SB__bar-primary::after{
    animation: bar_primary_scale 2s infinite linear, SP_colors 5s infinite linear;
}
.SB__bar-secondary{
    animation: bar_secondary_translate 2s infinite linear;
    left: -54.888891%;
}
.SB__bar-secondary::after{
    animation: bar_secondary_scale 2s infinite linear, SP_colors 5s infinite linear;
}
@keyframes bar_primary_translate {
  0% {
    transform: translateX(0); }
  20% {
    animation-timing-function: cubic-bezier(0.5, 0, 0.70173, 0.49582);
    transform: translateX(0); }
  59% {
    animation-timing-function: cubic-bezier(0.30244, 0.38135, 0.55, 0.95635);
    transform: translateX(83.67142%); }
  100% {
    transform: translateX(200.61106%); } 
}
@keyframes bar_secondary_translate {
  0% {
    animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);
    transform: translateX(0); }
  25% {
    animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);
    transform: translateX(37.65191%); }
  48% {
    animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);
    transform: translateX(84.38617%); }
  100% {
    transform: translateX(160.27778%); } 
}
@keyframes bar_primary_scale {
  0% {
    transform: scaleX(0.08); }
  37% {
    animation-timing-function: cubic-bezier(0.33473, 0.12482, 0.78584, 1);
    transform: scaleX(0.08); }
  75% {
    animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);
    transform: scaleX(0.66148); }
  100% {
    transform: scaleX(0.08); }
}
@keyframes bar_secondary_scale {
  0% {
    animation-timing-function: cubic-bezier(0.15, 0, 0.51506, 0.40969);
    transform: scaleX(0.08); }
  19% {
    animation-timing-function: cubic-bezier(0.31033, 0.28406, 0.8, 0.73371);
    transform: scaleX(0.4571); }
  44% {
    animation-timing-function: cubic-bezier(0.4, 0.62704, 0.6, 0.90203);
    transform: scaleX(0.72796); }
  100% {
    transform: scaleX(0.08); } 
}
@keyframes SP_colors{
    0% {
        background-color: #4285F4;
    }
    25% {
        background-color: #DE3E35;
    }
    50% {
        background-color: #F7C223;
    }
    75% {
        background-color: #1B9A59;
    }
    100% {
        background-color: #4285F4;
    }
}
.SB_stop,
.SB_stop::after{
    animation-iteration-count: 1, 1;
}
.SB__show{
    opacity: 1;
}
.SBP{
    position: fixed;
    pointer-events: auto;
    box-sizing: border-box;
    z-index: 1000;
    bottom: 0;
    left: 0;
    
    transform: translateY(110%);
}
.SBP__r {
    transition: transform .3s ease-in;
}
.SBP__container{
    box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);
    background: #323232;
    border-radius: 2px;
    box-sizing: content-box;
    display: flex;
    justify-content: space-between;
    min-height: 20px;
    max-width: 568px;
    min-width: 288px;
    overflow: hidden;
    padding: 14px 24px;
    font-family: 'Source Sans Pro', Arial, Helvetica, sans-serif;
}
.SBP__open{
    transform: translateY(0);
}
.SBP__message{
    box-sizing: border-box;
    border: none;
    color: white;
    padding-right: 15px;
    font-size: 1em;
    line-height: 30px;
    outline: none;
    text-decoration: none;
}
.SBP__btn-holder{
    display: flex;
}
.SBP__btn{
    box-sizing: border-box;
    color: white;
    font-weight: 600;
    line-height: 20px;
    padding: 5px;
    text-transform: uppercase;

    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    outline: none;
    border: none;
    display: inline-block;
    white-space: nowrap;
    text-decoration: none;
    vertical-align: baseline;
    font-size: 14px;
  
    text-align: center;
    margin: auto;
    min-width: 88px;
    border-radius: 2px;
    background: transparent;
}
.SBP__btn:disabled{
    color: grey;
}",
        "j":"var _FM_=function(){"use strict";function t(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])},n=function(){function t(){this._isCicleFinish=!0,this.delayToClose=5e3,setTimeout(function(){return document.querySelector(".SBP").classList.add("SBP__r")},500)}return t.prototype._resetTime=function(){clearTimeout(this.TimerId),this.TimerId=null},t.prototype._resetPane=function(t){window.removeEventListener("resize",this.OnRes),t.style.left=""},t.prototype._onClickBtn=function(t,e,n){var o=this;return this.OnClickBtn=function(){t.removeEventListener("click",o.OnClickBtn),o._resetTime(),Function.isFn(e)&&e(n)},this.OnClickBtn},t.prototype._normCbs=function(t){return Array.isArray(t)?t:[t]},t.prototype._onTransitEnd=function(t,e){var n=this;return this.OnTransitEnd=function(){t.removeEventListener("transitionend",n.OnTransitEnd);for(var o=0,i=n._normCbs(e);o<i.length;o++){var r=i[o];Function.isFn(r)&&r(t)}},this.OnTransitEnd},t.prototype._onRes=function(t){var e=this;return this.OnRes=function(){e._alignPane(t)},this.OnRes},t.prototype._alignPane=function(t){void 0===t&&(t=document.querySelector(".SBP"));var e=document.body.offsetWidth,n=t.offsetWidth;e>n?t.style.left=(e-n)/2+"px":t.style.left="0px"},t.prototype._delayedClose=function(t,e,n,o){var i=this;t&&(this.TimerId=setTimeout(function(){return i.closePane(e,n,o)},this.delayToClose))},t.prototype.showBar=function(t){if(void 0===t&&(t=!0),t){for(var e=document.querySelector(".SB"),n=0,o=e.children;n<o.length;n++){o[n].classList.remove("SB_stop")}e.classList.add("SB__show")}},t.prototype.setNotificator=function(t,e,n){var o=t.mes,i=t.btn,r=t.disabled,s=void 0!==r&&r,a=t.autoClose,c=void 0!==a&&a,u=document.querySelector(".SBP"),l=document.querySelector(".SBP__btn");document.querySelector(".SBP__message").innerHTML=o,l.removeEventListener("click",this.OnClickBtn),l.innerHTML=i,l.disabled=s,this._isCicleFinish||this._alignPane(u),s||l.addEventListener("click",this._onClickBtn(l,e,u)),this._delayedClose(c,null,n,u)},t.prototype.hideBar=function(t,e){var n=this;void 0===t&&(t=!0),void 0===e&&(e=null),setTimeout(function(){if(t){var o=document.querySelector(".SB");o.addEventListener("transitionend",n._onTransitEnd(o,[function(t){return Array.from(t.children).forEach(function(t){return t.classList.add("SB_stop")})},e])),o.classList.remove("SB__show")}else Function.isFn(e)&&e()},1e3)},t.prototype.closePane=function(t,e,n){var o=this;void 0===n&&(n=document.querySelector(".SBP")),this._resetTime();var i=document.querySelector(".SBP__btn");i.disabled=!0,this._normCbs(t).forEach(function(t){return Function.isFn(t)?t(n):t}),n.addEventListener("transitionend",this._onTransitEnd(n,[function(){return i.removeEventListener("click",o.OnClickBtn)},function(t){return o._resetPane(t)},function(){o._isCicleFinish=!0}].concat(this._normCbs(e)))),n.classList.remove("SBP__open")},t.prototype.openPane=function(t,e,n,o,i){var r=this;void 0===i&&(i=!1);var s=document.querySelector(".SBP");this._normCbs(t).forEach(function(t){return Function.isFn(t)?t(s):t}),this._alignPane(s),window.addEventListener("resize",this._onRes(s)),s.addEventListener("transitionend",this._onTransitEnd(s,this._normCbs(e).concat([function(t){return r._delayedClose(i,n,o,t)}]))),s.classList.add("SBP__open")},t.prototype.config=function(t){var e=this;return void 0===t&&(t=!0),this._isCicleFinish?(this._isCicleFinish=!1,this.showBar(t),function(n,o,i){var r=Function.isFn(n)?n():n;e.hideBar(t,function(){return e.openPane(e.setNotificator.bind(e,r,o,i))})}):function(){}},t}(),o=function(){function t(t){this.Http=t,this.Timeout=5e3}return t.prototype._onOnLine=function(t,e){var n=this;return this.OnLine=function(){n.watch(t,e),window.ononline=function(){return""}},this.OnLine},t.prototype._send=function(t,e,n){var o=this;this.Http.sendReq(e).then(function(){o.col=o.col.filter(function(t){return t!==n}),localStorage.setItem(t,o.col.join(", ")),o._clearAll(t)})},t.prototype._clearAll=function(t){localStorage.getItem(t)||"number"!=typeof this.Timer||(localStorage.removeItem(t),clearInterval(this.Timer),window.ononline=function(){return""},this.col=this.OnLine=this.Timer=null)},t.prototype.watch=function(t,e){var n=this;this.Timer=setInterval(function(){if(navigator.onLine){var o=localStorage.getItem(t);o?(n.col=o.split(", "),n.col.forEach(function(o){var i=e.options.body,r="string"==typeof i?JSON.parse(i):i;r.reqId=o,e.options.body=r,n._send(t,e,o)})):n._clearAll(t)}else clearInterval(n.Timer),n.Timer=null,window.ononline=n._onOnLine(t,e)},this.Timeout)},t}(),i=function(){function t(){}return t.prototype._checkValidity=function(t){return!t.checkValidity||t.checkValidity()},t.prototype._whiteSpaceWatcher=function(t,e){var n=t.split(" ").filter(function(t){return!!t});n.length>1?e.value=n.join(" "):e.value=n.join("")},t.prototype._validateField=function(t){var e=t.value.trim(),n=t.parentNode;e?(n.classList.add("F__dirty"),this._checkValidity(t)?(this._whiteSpaceWatcher(e,t),this._setMessage(t),n.classList.add("F__valid")):(this._setMessage(t),n.classList.add("F__invalid"))):(t.required&&(this._setMessage(t),n.classList.add("F__invalid")),n.classList.remove("F__dirty"),t.value=""),n.classList.remove("F__active")},t.prototype._setMessage=function(t){t.parentNode.querySelector(".F__inform").innerHTML=t.validationMessage||""},t}();return function(e){function i(){var t=e.call(this)||this;return t.Base=window._WFW_,t.H_Flag="que",t.snackBar=new n,t.scheduller=new o(t.Base.httpService),t._setOnAllInputs(),t.OnRes=t._onLayoutChange(Array.from(document.querySelectorAll(".F__textarea")),document.querySelectorAll(".F__layout-block")),t.OnRes(),t.Base._U_EventListSetter("resize",t.OnRes),t}return t(i,e),Object.defineProperty(i.prototype,"LANG",{get:function(){return window.SITE_LANG||"EN"},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"Default_btn",{get:function(){return document.getElementById("Default_btn").innerHTML},enumerable:!0,configurable:!0}),i.prototype._httpOpts=function(t,e,n){return void 0===n&&(n="POST"),{url:t,options:{method:n,cache:"no-cache",headers:{"Content-type":"application/json; charset=utf-8",Accept:"application/json"},body:e}}},i.prototype._formSerializer=function(t){for(var e=t.querySelectorAll(".F__form-wrap input:not([type=submit]), .F__form-wrap textarea"),n={},o=0,i=e;o<i.length;o++){var r=i[o];if("radio"===r.type||"checkbox"===r.type)r.checked&&(n[r.id]=!0);else{if(!r.value.trim())continue;n[r.id]=r.value.trim()}}return Object.assign({ACTION:"REGISTER",SITE_LANG:this.LANG},n)},i.prototype._delay=function(t){setTimeout(t,1e3)},i.prototype._hydratorLS=function(t){if("localStorage"in window){var e=this.H_Flag,n=localStorage.getItem(e);if(n){var o=n.split(", ");o.push(t),localStorage.setItem(e,o.join(", "))}else localStorage.setItem(e,t);return!0}return!1},i.prototype._disableBtn=function(t){t.disabled=!0},i.prototype._enableBtn=function(t){t.disabled=!1},i.prototype._onSubmit=function(t,e,n){var o=this,i=t.onClS,r=t.onClF,s=t.onAfClose;return function(t){t.preventDefault();var a=t.target,c=a.querySelectorAll(".F__invalid"),u=a.action;if(t.isTrusted&&c.length<=0&&o.Base.S7.isCanSendForm){o.Base.S7.isCanSendForm=!1;var l=o.snackBar.config();o._disableBtn(u),o.Base.httpService.sendReq(o._httpOpts(o.Base.S7.URIs.order,o._formSerializer(a))).then(function(t){t=JSON.parse(t),o.Base.ReqID=t.reqId,Function.isFn(e)&&e(),l({mes:t.info,btn:document.querySelector("#N__register .N__success .btn").innerHTML,autoClose:!0,disabled:!1},i,s)}).catch(function(){Function.isFn(n)&&n(),l(o._forWidgetExtractor({selectorName:"#N__register .N__fail"}),function(){return r(function(){o.Base.S7.isCanSendForm=!0,o._enableBtn(u)})},[function(){return o._enableBtn(u)},s])}).then(function(){l=null})}}},i.prototype._forWidgetExtractor=function(t,e){var n=this,o=t.selectorName,i=t.mesSel,r=void 0===i?".mes":i,s=t.btnSel,a=void 0===s?".btn":s,c=void 0===e?{}:e,u=c.autoClose,l=void 0===u||u,d=c.disabled,_=void 0!==d&&d;if(!o)throw Error("You Idiot!");return function(){var t=document.querySelector(o);return{mes:t.querySelector(r).innerHTML,btn:t.querySelector(a)?t.querySelector(a).innerHTML:n.Default_btn,autoClose:l,disabled:_}}},i.prototype._setDefDate=function(t){t.type.includes("date")&&(t.parentNode.classList.add("F__dirty"),setTimeout(function(){t.value=(new Date).toISOString().substring(0,10)}),t.min=(new Date).toISOString().substring(0,10))},i.prototype._checkDefaults=function(t){t.value&&t.parentNode.classList.add("F__dirty")},i.prototype._createMesPh=function(t){var e=document.createElement("div");e.className="F__inform",e.innerHTML="",t.parentNode.insertBefore(e,t.nextElementSibling)},i.prototype._setOnAllInputs=function(){var t=this,e=document.querySelectorAll(".F__form-wrap input:not([type=submit]), .F__form-wrap textarea");this.OnFocus=function(t){var e=t.target,n=e.parentNode;n.classList.remove("F__valid"),n.classList.remove("F__invalid"),n.classList.add("F__active")},this.OnBlur=function(e){var n=e.target;t._validateField(n)};for(var n=0,o=e;n<o.length;n++){var i=o[n];"checkbox"!==i.type&&"radio"!==i.type&&(this._createMesPh(i),this._setDefDate(i),this._checkDefaults(i),this.Base._U_EventListSetter("focus",this.OnFocus,i),this.Base._U_EventListSetter("blur",this.OnBlur,i))}},i.prototype._onLayoutChange=function(t,e){return function(){document.documentElement.offsetWidth<923?t.forEach(function(t){e[1].appendChild(t)}):t.forEach(function(t){e[0].appendChild(t)})}},i.prototype.canceller=function(){var t=this,e=this,n=e.LANG,o=e.Base,i=e.H_Flag,r=e.scheduller,s=e.snackBar,a=function(){o.S7.isCanSendForm=!0},c=function(e,n){return void 0===n&&(n=function(){return s.closePane(null,a)}),s.setNotificator({mes:e,btn:t.Default_btn,autoClose:!0,disabled:!1},n,a)},u={ACTION:"CANCEL",SITE_LANG:n,reqId:o.ReqID};s.setNotificator(this._forWidgetExtractor({selectorName:"#N__cancel .N__inprocess"},{autoClose:!1,disabled:!0})());var l=this._httpOpts(o.S7.URIs.order,u,"DELETE");o.httpService.sendReq(l).then(function(e){return t._delay(function(){return c(e)})}).catch(function(){return t._delay(function(){t._hydratorLS(o.ReqID)?r&&Function.isFn(r.watch)&&r.watch(i,l):null,c(document.querySelector("#N__cancel .N__fail .mes").innerHTML)})})},i.prototype.onCloseForm=function(){window.removeEventListener("resize",this.OnRes);for(var t=0,e=document.forms;t<e.length;t++){e[t].removeEventListener("submit",this.OnSub)}for(var n=0,o=document.querySelectorAll(".F__form-wrap input:not([type=submit]), .F__form-wrap textarea");n<o.length;n++){var i=o[n];i.removeEventListener("focus",this.OnFocus),i.removeEventListener("blur",this.OnBlur)}},i.prototype.setModule=function(t,e,n){this.OnSub=this._onSubmit(t,e,n);for(var o=0,i=document.forms;o<i.length;o++){var r=i[o];this.Base._U_EventListSetter("submit",this.OnSub,r)}},i}(i)}();"
    }
}